"lucas is the best"!!(2)

[
	+ (-12) (13), 
	'a', 
	[|double(x) { * (x) (2) }]
]!!(2)!!(0)(100)


|fact(x) {
	if (== (x) (1)) then (1) else (
		* (x) (fact (- (x) (1)))
	)
} (10)






|add(x){ + (x) (x) } (10)


+ (2) (3)






[1, 2, 3]!!(0)




[]





|num(x) {
	if (== (x) (1)) then (1) else (
		+ (x) (num (- (x) (1)))
	)
} (10)



|plusTwo(x) {
	+ (x) (x)
} (
	if (> (200) (199)) then (10) else (99)
)



|plusTwo(oldFunc) {
	|newFunc(y) {
		+ (oldFunc (y)) (10)
	}
} (
	|square(x) { * (x) (x) }
) (
	- (20) (13)
)



|add(x) {
	|curry(y) {
		|test(z) {
			- (x) (- (y) (z))
		}
	}
} (10) (20) (30)


|plusTwo(x) {
	+ (x) (2)
} (10)

- (10) (* (4) (3))















if (> (1) (2)) then (and (True) (False)) else (or (True) (False))







|x.(
	if (- (x) (2)) then (10) else (20)
) (100)









|x.(
	+ (* (x) (x)) (100)
)(50)




|x.(+ (x) (x))( * (10) (20))











(function(y) {
	alert(y(
		function(givenFact) {
			return function(n) {
				if( n < 2 ) return 1;
				else return n * givenFact(n-1);
			}
		}
	)(5)); // Outputs 120 
	
	alert(y(
		function(givenFib) {
			return function(n) {
				if( n<=2 ) return 1;
				else return givenFib(n-1) + givenFib(n-2);
			}
		}
	)(5)); // Outputs 5
	
})(
	function(le) {
		return (function(f) { 
			return f(f); 
		})(function(f) {
			return le(
				function(x) { return (f(f))(x); }
			);
		});
	}
);





|a.(
	|b.(
		+ (!a (20) (10)) (!b (3))
	)
)(
	|x.(
		|y.(
			- (x) (y)
		)
	)
)(
	|x.(
		|y.(
			* (x) (y)
		)
	) (4)
)




|x.(
	!x (1)
) (
	|z.( + (z) (z) )
)








FunctionContext {
	symbolStack = Stack ["y","f"], 
	symbolTable = [("x", FunctionContext {
		symbolStack = Stack ["z"], 
		symbolTable = [], 
		expression = FunctionCall "f" (Stack [
			FunctionCall "z" (Stack [ExpBoundVar (BoundVar "z")])
		])
	})], 

	expression = FunctionCall "f" (Stack [
		FunctionCall "x" (Stack [ExpBoundVar (BoundVar "x")])
	])
}








|w.(
	!w (
		|y.(
			* (y) (y)	
		)
	)
)(
	|x.(
		!x (30)
	)
)











|x.(
	|y.(
		|z.(
			* + x y z
		)
	)
)(5)(- 20 10)(2)



+ 10 50






